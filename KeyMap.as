class KeyMap
{
  public static var GFX_TO_STR: Object = {
    65: "A",
    66: "B",
    67: "C",
    68: "D",
    69: "E",
    70: "F",
    71: "G",
    72: "H",
    73: "I",
    74: "J",
    75: "K",
    76: "L",
    77: "M",
    78: "N",
    79: "O",
    80: "P",
    81: "Q",
    82: "R",
    83: "S",
    84: "T",
    85: "U",
    86: "V",
    87: "W",
    88: "X",
    89: "Y",
    90: "Z",
    48: "0",
    49: "1",
    50: "2",
    51: "3",
    52: "4",
    53: "5",
    54: "6",
    55: "7",
    56: "8",
    57: "9",
    96: "NUM0",
    97: "NUM1",
    98: "NUM2",
    99: "NUM3",
    100: "NUM4",
    101: "NUM5",
    102: "NUM6",
    103: "NUM7",
    104: "NUM8",
    105: "NUM9",
    106: "NUM*",
    107: "NUM+",
    108: "NUMEnter",
    109: "NUM-",
    110: "NUM.",
    111: "NUM/",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    124: "F13",
    125: "F14",
    126: "F15",
    8: "Backspace",
    9: "Tab",
    13: "Enter",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: "Spacebar",
    33: "PgUp",
    34: "PgDown",
    35: "End",
    36: "Home",
    37: "LeftArrow",
    38: "UpArrow",
    39: "RightArrow",
    40: "DownArrow",
    44: "PtrScr",
    45: "Insert",
    46: "Delete",
    144: "NumLock",
    145: "ScrollLock",
    160: "LeftShift",
    161: "RightShift",
    162: "LeftControl",
    163: "RightControl",
    164: "LeftAlt",
    165: "RightAlt",
    186: "Semicolon",
    187: "Equal",
    188: "Comma",
    189: "Minus",
    190: "Period",
    191: "ForwardSlash",
    219: "Leftbracket",
    220: "Backslash",
    221: "Rightbracket" // ,

    // 12: "Clear",
    // 16: "Shift",
    // 17: "Control",
    // 18: "Alt"
  };

  public static var STR_TO_DX: Object = {
    "Escape": 1,
    "1": 2,
    "2": 3,
    "3": 4,
    "4": 5,
    "5": 6,
    "6": 7,
    "7": 8,
    "8": 9,
    "9": 10,
    "0": 11,
    "Minus": 12,
    "Equals": 13,
    "Backspace": 14,
    "Tab": 15,
    "Q": 16,
    "W": 17,
    "E": 18,
    "R": 19,
    "T": 20,
    "Y": 21,
    "U": 22,
    "I": 23,
    "O": 24,
    "P": 25,
    "LeftBracket": 26,
    "RightBracket": 27,
    "Enter": 28,
    "LeftControl": 29,
    "A": 30,
    "S": 31,
    "D": 32,
    "F": 33,
    "G": 34,
    "H": 35,
    "J": 36,
    "K": 37,
    "L": 38,
    "Semicolon": 39,
    "Apostrophe": 40,
    "~": 41,
    "LeftShift": 42,
    "BackSlash": 43,
    "Z": 44,
    "X": 45,
    "C": 46,
    "V": 47,
    "B": 48,
    "N": 49,
    "M": 50,
    "Comma": 51,
    "Period": 52,
    "ForwardSlash": 53,
    "RightShift": 54,
    "NUM*": 55,
    "LeftAlt": 56,
    "Spacebar": 57,
    "CapsLock": 58,
    "F1": 59,
    "F2": 60,
    "F3": 61,
    "F4": 62,
    "F5": 63,
    "F6": 64,
    "F7": 65,
    "F8": 66,
    "F9": 67,
    "F10": 68,
    "NumLock": 69,
    "ScrollLock": 70,
    "NUM7": 71,
    "NUM8": 72,
    "NUM9": 73,
    "NUM-": 74,
    "NUM4": 75,
    "NUM5": 76,
    "NUM6": 77,
    "NUM+": 78,
    "NUM1": 79,
    "NUM2": 80,
    "NUM3": 81,
    "NUM0": 82,
    "NUM.": 83,
    "F11": 87,
    "F12": 88,
    "NUMEnter": 156,
    "RightControl": 157,
    "NUM/": 181,
    "PtrScr": 183,
    "RightAlt": 184,
    "Pause": 197,
    "Home": 199,
    "UpArrow": 200,
    "PgUp": 201,
    "LeftArrow": 203,
    "RightArrow": 205,
    "End": 207,
    "DownArrow": 208,
    "PgDown": 209,
    "Insert": 210,
    "Delete": 211,
    "LeftMouseButton": 256,
    "RightMouseButton": 257,
    "MiddleMouseButton": 258,
    "MouseButton3": 259,
    "MouseButton4": 260,
    "MouseButton5": 261,
    "MouseButton6": 262,
    "MouseButton7": 263,
    "MouseWheelUp": 264,
    "MouseWheelDown": 265,
    "DPAD_UP": 266,
    "DPAD_DOWN": 267,
    "DPAD_LEFT": 268,
    "DPAD_RIGHT": 269,
    "START": 270,
    "BACK": 271,
    "LEFT_THUMB": 272,
    "RIGHT_THUMB": 273,
    "LEFT_SHOULDER": 274,
    "RIGHT_SHOULDER": 275,
    "DPAD_A": 276,
    "DPAD_B": 277,
    "DPAD_X": 278,
    "DPAD_Y": 279,
    "DPAD_LT": 280,
    "DPAD_RT": 281
  };

  public static function dx_from_gfx(gfx: Number): Number
  {
    return STR_TO_DX[GFX_TO_STR[gfx]];
  }

  public static function dx_from_string(dx_str: String): Number
  {
    return STR_TO_DX[dx_str];
  }

  public static function string_from_dx(dx: Number): String
  {
    for (var key in STR_TO_DX) {
      if (STR_TO_DX[key] == dx) {
        return key;
      }
    }
    return null;
  }

  public static function gfx_from_string(gfx_str: String): Number
  {
    for (var key in GFX_TO_STR) {
      if (GFX_TO_STR[key] == gfx_str) {
        return key;
      }
    }
    return null;
  }

  public static function string_from_gfx(gfx: Number): String
  {
    return GFX_TO_STR[gfx];
  }
}
